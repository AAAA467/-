import os
import random
import logging
from flask import Flask, request, abort
from telegram import Bot, Update, ReplyKeyboardMarkup
from telegram.ext import Dispatcher, CommandHandler, MessageHandler, ConversationHandler, filters, ContextTypes

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

app = Flask(__name__)

BOT_TOKEN = os.getenv("BOT_TOKEN")
if not BOT_TOKEN:
    raise RuntimeError("‚ùå BOT_TOKEN not set in environment variables!")

bot = Bot(token=BOT_TOKEN)

# Dispatcher –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞–ø–¥–µ–π—Ç–æ–≤
dispatcher = Dispatcher(bot, None, workers=0, use_context=True)

CHOOSING, SOLVING = range(2)
user_state = {}

menu_keyboard = ReplyKeyboardMarkup(
    [['–ó–∞–¥–∞—á–∞ 1', '–ó–∞–¥–∞—á–∞ 2', '–ó–∞–¥–∞—á–∞ 3', '–ó–∞–¥–∞—á–∞ 4'], ['/skip', '/start']],
    resize_keyboard=True
)

# --- –¢–≤–æ–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∑–∞–¥–∞—á –∏ —Ö–µ–Ω–¥–ª–µ—Ä—ã (–∫–∞–∫ –≤ —Ç–≤–æ–µ–º –∫–æ–¥–µ) ---
# ... (—Å—é–¥–∞ –≤—Å—Ç–∞–≤—å –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ generate_task1, start, choose_task, answer_handler, skip_handler –∏ —Ç.–¥.) ...
# –î–ª—è —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è –∑–¥–µ—Å—å ‚Äî –≤—Å—Ç–∞–≤—å —Ç–≤–æ–π –∫–æ–¥ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –∏ —Ö–µ–Ω–¥–ª–µ—Ä–∞–º–∏

# –í–ê–ñ–ù–û: –ø–µ—Ä–µ–ø–∏—à–∏ —Ö–µ–Ω–¥–ª–µ—Ä—ã, —á—Ç–æ–±—ã –æ–Ω–∏ –±—ã–ª–∏ async, –∫–∞–∫ —É —Ç–µ–±—è, –Ω–æ Flask –±—É–¥–µ—Ç –∏—Ö –∑–∞–ø—É—Å–∫–∞—Ç—å –≤ sync —Ä–µ–∂–∏–º–µ —á–µ—Ä–µ–∑ dispatcher

async def start(update, context):
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Ä–∞—Å—á—ë—Ç–Ω—ã—Ö –∑–∞–¥–∞—á.\n\n"
        "–í—ã–±–∏—Ä–∞–π –æ–¥–Ω—É –∏–∑ –∑–∞–¥–∞—á –Ω–∏–∂–µ:\n"
        "üìå –§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞: –í—ã—Å–æ—Ç–∞‚Ä≤,–í—ã—Å–æ—Ç–∞ –∏–ª–∏ –£–≥–ª–æ–º–µ—Ä‚Ä≤,–£–≥–ª–æ–º–µ—Ä –∏–ª–∏ –î–∞–ª—å–Ω–æ—Å—Ç—å‚Ä≤,–î–∞–ª—å–Ω–æ—Å—Ç—å –∏–ª–∏ –ß–∏—Å–ª–æ–≤–æ–π –∫—É—Ä—Å (–¥–ª—è –∑–∞–¥–∞—á–∏ 4)\n"
        "üìå –ü—Ä–∏–º–µ—Ä: 112,118 –∏–ª–∏ 0‚Äì54,0‚Äì51 –∏–ª–∏ 3010,2859 –∏–ª–∏ 8\n"
        "üìå –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:\n"
        "‚Ä¢ –í—ã—Å–æ—Ç–∞ –∏ –í—ã—Å–æ—Ç–∞‚Ä≤ ‚Äî –º–∞–∫—Å–∏–º—É–º 3 —Ü–∏—Ñ—Ä—ã\n"
        "‚Ä¢ –î–∞–ª—å–Ω–æ—Å—Ç—å –∏ –î–∞–ª—å–Ω–æ—Å—Ç—å‚Ä≤ ‚Äî –º–∞–∫—Å–∏–º—É–º 4 —Ü–∏—Ñ—Ä—ã\n"
        "‚Ä¢ –í—ã—Å–æ—Ç–∞ –≤ –∑–∞–¥–∞—á–∞—Ö –æ—Ç 10 –¥–æ 500\n"
        "üõ† –ö–æ–º–∞–Ω–¥—ã:\n"
        "‚Ä¢ /skip ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –æ—Ç–≤–µ—Ç –∏ —Ä–µ—à–µ–Ω–∏–µ\n"
        "‚Ä¢ /start ‚Äî –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ\n",
        reply_markup=menu_keyboard
    )
    return CHOOSING

# –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ö–µ–Ω–¥–ª–µ—Ä—ã...

# –î–æ–±–∞–≤–ª—è–µ–º —Ö–µ–Ω–¥–ª–µ—Ä—ã –≤ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
from telegram.ext import ConversationHandler, CommandHandler, MessageHandler, filters

conv_handler = ConversationHandler(
    entry_points=[CommandHandler("start", start)],
    states={
        CHOOSING: [
            MessageHandler(filters.Regex("^–ó–∞–¥–∞—á–∞ [1-4]$"), choose_task),
            CommandHandler("skip", skip_handler),
        ],
        SOLVING: [
            MessageHandler(filters.TEXT & ~filters.COMMAND, answer_handler),
            CommandHandler("skip", skip_handler),
        ],
    },
    fallbacks=[CommandHandler("start", start)],
)

dispatcher.add_handler(conv_handler)

# --- Flask route –¥–ª—è webhook ---

@app.route(f"/{BOT_TOKEN}", methods=["POST"])
def webhook():
    if request.method == "POST":
        update = Update.de_json(request.get_json(force=True), bot)
        dispatcher.process_update(update)
        return "ok", 200
    else:
        abort(405)

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask –Ω–∞ –Ω—É–∂–Ω–æ–º –ø–æ—Ä—Ç—É (–æ–±—ã—á–Ω–æ Render –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø–æ—Ä—Ç –∏–∑ env PORT)
    port = int(os.environ.get("PORT", "5000"))
    app.run(host="0.0.0.0", port=port)
